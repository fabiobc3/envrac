{"version":3,"sources":["components/CO2E_Emissions.js","components/DisplayZIP.js","components/GetZip.js","components/EnvRac.js","components/DisplayData.js","components/Graph.js","components/Learn.js","components/Alert.js","components/EnviroRacInCom.js","components/DisplayJust.js","components/App.js","reportWebVitals.js","index.js"],"names":["CO2E_Emissions","DisplayZIP","props","Paragraph","marginTop","marginBottom","marginLeft","zip","GetZip","useState","newZip","setNewZip","setZip","Heading","onSubmit","e","preventDefault","TextInput","type","placeholder","value","onChange","target","Button","EnvRac","Pane","size","textAlign","DisplayData","cO2E_Emissions","a","url","data","fetch","response","json","responseData","counter","map","count","CO2E_EMISSION","methaneEmissions","GAS_NAME","biogenicCO2Emissions","cO2Emissions","nitrousOxideEmissions","setcO2EData","methaneData","setmethaneData","biogenicCO2Data","setbiogenicCO2Data","cO2Data","setcO2Data","nitrousOxideData","setnitrousOxideData","useEffect","cO2E","methane","biogenicCO2","cO2","nitrousOxide","name","emissions","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","Graph","Learn","UnorderedList","ListItem","AlertBox","Alert","title","appearance","EnviroRacInCom","DisplayJust","enviroJust","hasOccured","ENVIRONMENTAL_JUSTICE_DESC","rating","setRating","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1320ca08.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nfunction CO2E_Emissions(props){\r\n\r\n    const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n    const zip = props.zip;\r\n    const url = baseLink + zip + \"/JSON\"\r\n\r\n    const[data, setData] = useState();\r\n  \r\n    useEffect( async() => {\r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        console.log(responseData);\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n          const count = response.CO2E_EMISSION;\r\n          counter = counter + count;\r\n        }); \r\n        setData(counter);\r\n      });\r\n\r\n    let isData = (data != 0);\r\n    let str = 'Total CO2 equivalent emissions from facilities in zip ' + zip + ' is ' + data;\r\n\r\n    return (\r\n      <div>\r\n        {isData ? str : 'no data'}\r\n      </div>\r\n    );\r\n};\r\n  \r\nexport default CO2E_Emissions;","import React from 'react';\r\nimport {Paragraph} from 'evergreen-ui';\r\n\r\nfunction DisplayZIP(props){\r\n\r\n    return(\r\n        <Paragraph\r\n            marginTop=\"25px\"\r\n            marginBottom=\"25px\"\r\n            marginLeft=\"50px\"\r\n        >\r\n            Submitted ZIP: {props.zip}\r\n        </Paragraph>\r\n    )\r\n}\r\n\r\nexport default DisplayZIP;","import React, {useState, useEffect, useContext} from 'react';\r\nimport CO2E_Emissions from './CO2E_Emissions';\r\nimport DisplayZIP from './DisplayZIP';\r\nimport {Button, TextInput, Text, Paragraph, Heading} from 'evergreen-ui'; \r\n\r\nfunction GetZip(props){\r\n\r\n    const[newZip, setNewZip] = useState(\"\");\r\n    let setZip = props.setZip\r\n\r\n    const handleSubmitt = (e) => {\r\n        e.preventDefault();\r\n        setZip(newZip);\r\n        setNewZip(\"\");\r\n    }\r\n\r\n    return(\r\n                <div>\r\n                    <Heading\r\n                        marginLeft=\"25px\"\r\n                    >\r\n                        Try it Out Yourself:\r\n                    </Heading>\r\n                    <Paragraph\r\n                        marginTop=\"25px\"\r\n                        marginLeft=\"50px\"\r\n                        marginBottom=\"25px\"\r\n                    >\r\n                        Enter a zip-code to see information about environmental racism in that community:\r\n                    </Paragraph>\r\n                    <div>\r\n                        <form onSubmit={handleSubmitt}>\r\n                            <TextInput\r\n                                marginLeft=\"50px\" \r\n                                type=\"text\" \r\n                                placeholder=\"Enter zip here\" \r\n                                value={newZip} \r\n                                onChange={\r\n                                    e => setNewZip(e.target.value)\r\n                                }\r\n                            >\r\n                            </TextInput>\r\n                            <Button\r\n                                marginLeft=\"50px\"  \r\n                                type=\"submit\"\r\n                                marginLeft={5}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default GetZip;","import React from 'react';\r\nimport {Pane, Heading, Paragraph} from 'evergreen-ui'; \r\nfunction EnvRac(){    \r\n    return (\r\n        <div>\r\n            <Pane>\r\n                <Heading\r\n                    size={900}\r\n                    textAlign=\"center\"\r\n                    marginBottom=\"40px\"\r\n                >\r\n                    Enviromental Racism\r\n                </Heading>\r\n                <Heading>\r\n                    What is Enviromental Racism?\r\n                </Heading>\r\n                <Paragraph\r\n                    marginTop=\"25px\"\r\n                    marginLeft=\"25px\"\r\n                >\r\n                    Environmental racism is the term is used to describe the disproportionate environmental injustice that occurs within neighborhoods that are composed by a significant number of minority groups and people of lower socio-economic status\r\n                </Paragraph>     \r\n            </Pane>\r\n        </div>       \r\n      );\r\n}\r\n\r\nexport default EnvRac;","import React, {useEffect, useState} from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\n\r\nfunction DisplayData(props){\r\n    \r\n    async function cO2E_Emissions(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\";\r\n    \r\n        let data = 0;\r\n\r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n            const count = response.CO2E_EMISSION;\r\n            counter = counter + count;\r\n        }); \r\n        \r\n        data = counter;\r\n    \r\n        return data;\r\n        \r\n    };\r\n\r\n    async function methaneEmissions(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\"\r\n    \r\n        let data = 0;\r\n      \r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n            if(response.GAS_NAME == 'Methane'){\r\n                const count = response.CO2E_EMISSION;\r\n                counter = counter + count;\r\n            }\r\n        }); \r\n\r\n        data = counter;\r\n        \r\n        return data\r\n    };\r\n\r\n    async function biogenicCO2Emissions(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\"\r\n    \r\n        let data = 0;\r\n      \r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n            if(response.GAS_NAME == 'Biogenic CO2'){\r\n                const count = response.CO2E_EMISSION;\r\n                counter = counter + count;\r\n            }\r\n        }); \r\n\r\n        data = counter;\r\n    \r\n        return data\r\n    };\r\n\r\n    async function cO2Emissions(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\"\r\n    \r\n        let data = 0;\r\n      \r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n            if(response.GAS_NAME == 'Carbon Dioxide'){\r\n                const count = response.CO2E_EMISSION;\r\n                counter = counter + count;\r\n            }\r\n        }); \r\n    \r\n        data = counter;\r\n\r\n        return data\r\n    };\r\n\r\n    async function nitrousOxideEmissions(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\"\r\n    \r\n        let data = 0;\r\n      \r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n            if(response.GAS_NAME == 'Nitrous Oxide'){\r\n                const count = response.CO2E_EMISSION;\r\n                counter = counter + count;\r\n            }\r\n        }); \r\n           \r\n        data = counter;\r\n\r\n        return data\r\n    };\r\n\r\n    const[cO2EData, setcO2EData] = useState();\r\n    const[methaneData, setmethaneData] = useState();\r\n    const[biogenicCO2Data, setbiogenicCO2Data] = useState();\r\n    const[cO2Data, setcO2Data] = useState();\r\n    const[nitrousOxideData, setnitrousOxideData] = useState();\r\n  \r\n    useEffect( async() => {\r\n        let cO2E = await cO2E_Emissions();\r\n        let methane = await methaneEmissions();\r\n        let biogenicCO2 = await biogenicCO2Emissions();\r\n        let cO2 = await cO2Emissions();\r\n        let nitrousOxide = await nitrousOxideEmissions(); \r\n        setcO2EData(cO2E);\r\n        setmethaneData(methane);\r\n        setbiogenicCO2Data(biogenicCO2);\r\n        setcO2Data(cO2);\r\n        setnitrousOxideData(nitrousOxide);\r\n    });\r\n\r\n    const data = [\r\n        {\r\n          name: 'CH4',\r\n          emissions: methaneData,\r\n        },\r\n        {\r\n          name: 'B_CO2',\r\n          emissions: biogenicCO2Data,\r\n        },\r\n        {\r\n          name: 'CO2',\r\n          emissions: cO2Data,\r\n        },\r\n        {\r\n          name: 'N2O',\r\n          emissions: nitrousOxideData\r\n        }\r\n      ];\r\n\r\n    return (\r\n        <BarChart \r\n            \r\n            width={500}\r\n            height={300} \r\n            data={data}\r\n            margin={{\r\n                top: 5,\r\n                right: 30,\r\n                left: 25,\r\n                bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"emissions\" fill=\"#301b3f\" />\r\n        </BarChart>\r\n    );\r\n};\r\n  \r\nexport default DisplayData;","import DisplayData from './DisplayData';\r\nimport React from 'react';\r\nimport {Heading, Paragraph} from 'evergreen-ui';\r\n\r\nfunction Graph(props){\r\n    let zip = props.zip;\r\n    return(\r\n            <div>\r\n                <Heading\r\n                    marginLeft=\"50px\"\r\n                    marginBottom=\"25px\"\r\n                >\r\n                    Emissions:\r\n                </Heading>\r\n                <DisplayData zip={zip}/>\r\n                <Heading\r\n                    size={400}\r\n                    marginLeft=\"75px\"\r\n                    marginBottom=\"5px\"\r\n                >\r\n                    Key:\r\n                </Heading>\r\n                <Paragraph\r\n                    marginLeft='75px'\r\n                >\r\n                    CH4: methane, \r\n                    B_CO2: biogenic CO2, \r\n                    CO2: carbon dioxide, \r\n                    N2O: nitrous oxide \r\n                </Paragraph>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Graph;","import React from 'react';\r\nimport {UnorderedList, ListItem, Heading} from 'evergreen-ui';\r\n\r\nfunction Learn(){\r\n    return(\r\n            <div>\r\n                <Heading>\r\n                    Learn more about what you can do:\r\n                </Heading>\r\n                <UnorderedList\r\n                    marginLeft=\"50px\"\r\n                    marginBottom=\"100px\"\r\n                >\r\n                    <ListItem>\r\n                        Increase awareness by letting your fellow community members know\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        Research your local communities issue more in depth so that you can take precautions against the possible environmental side effects\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        Contact your local government representatives\r\n                    </ListItem>\r\n                </UnorderedList>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Learn;","import React from 'react';\r\nimport {Alert} from 'evergreen-ui';\r\n\r\nfunction AlertBox(){\r\n    return(\r\n        <div>\r\n            <Alert\r\n                marginBottom=\"5px\"\r\n                title=\"If the graph displays no data from the zip you submitted, this means that the EPA has no data about it on their API. If the graph takes long to refersh once you submit a new ZIP it might be helpful to refresh the page.\"\r\n                appearance=\"card\"\r\n            >    \r\n            </Alert>        \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AlertBox;","import React from 'react';\r\nimport {Pane, Heading, Paragraph} from 'evergreen-ui'; \r\nfunction EnviroRacInCom(){    \r\n    return (\r\n        <div>\r\n            <Heading>\r\n                Environmental Racism in Communities:\r\n            </Heading>\r\n            <Paragraph\r\n                marginTop=\"25px\"\r\n                marginLeft=\"25px\"\r\n                marginBottom=\"25px\"\r\n            >\r\n                In order to increase awareness about environmental racism, we decided to develop this website that displays information about the enviroment and socio-economic status when it comes to a particular ZIP code \r\n            </Paragraph>\r\n            <Heading\r\n                marginTop=\"25px\"\r\n                marginLeft=\"25px\"\r\n                marginBottom=\"25px\"\r\n            >\r\n                How Does it Work?\r\n            </Heading>\r\n            <Paragraph\r\n                marginTop=\"25px\"\r\n                marginLeft=\"50px\"\r\n            >\r\n                All the data is being retrived from the EPA's Envirofacts API. When a person types a ZIP code below and clicks the submit button, we look for information on the emission of polutants in that area. We then parse through the data and display what we recieve from the EPA's database in a graph. We also search for how the EPA classified the population of that neighborhood. This is refered to as the enviromental justice description of the region.\r\n            </Paragraph>\r\n        </div>    \r\n      );\r\n}\r\n\r\nexport default EnviroRacInCom;","import React, {useEffect, useState} from 'react';\r\nimport {Heading, Paragraph} from 'evergreen-ui';\r\n\r\nfunction DisplayJust(props){\r\n\r\n\r\n    async function enviroJust(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/ICIS_FACILITY_INTEREST/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\"\r\n\r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = \"\";\r\n        let hasOccured = false;\r\n        responseData.map(response => {\r\n          const count = response.ENVIRONMENTAL_JUSTICE_DESC;\r\n          if (count !== null && hasOccured === false){\r\n            counter = counter + count;\r\n            hasOccured = true;\r\n          }});\r\n\r\n        return counter;\r\n\r\n    };\r\n\r\n    const[rating, setRating] = useState();\r\n  \r\n    useEffect( async() => {\r\n        let rating = await enviroJust();\r\n        setRating(rating);\r\n    }); \r\n\r\n    return (\r\n      <div>\r\n        <Heading\r\n            marginLeft=\"50px\"\r\n            marginBottom=\"25px\"\r\n        >\r\n            Enviromental Justice Description:\r\n        </Heading>\r\n        <Paragraph\r\n            marginLeft=\"75px\"\r\n        >\r\n            Enviromental Justice Description in zip {props.zip} is <b>{rating}</b>\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n};\r\n  \r\nexport default DisplayJust;","import '../Style.css';\nimport React, {useState} from 'react';\nimport GetZip from './GetZip';\nimport DisplayZIP from './DisplayZIP';\nimport EnvRac from './EnvRac';\nimport Graph from './Graph';\nimport Learn from './Learn';\nimport AlertBox from './Alert';\nimport {Pane} from 'evergreen-ui'\nimport EnviroRacInCom from './EnviroRacInCom'\nimport DisplayJust from './DisplayJust';\n\nfunction App() {\n\n  const [zip, setZip] = useState(\"\");\n\n  return (\n      <Pane\n        margin=\"15px\"\n      >\n        <div className=\"container\">\n          <EnvRac/>\n        </div>\n        <div className=\"container\">\n          <EnviroRacInCom/>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n                <GetZip setZip={setZip}/>\n                <DisplayZIP zip={zip}/>\n            </div>\n            <div className=\"col-6\">\n              <Graph zip={zip}/>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n            <DisplayJust zip={zip}/>\n        </div>\n        <div className=\"container\">\n            <AlertBox/>\n        </div>\n        <div className=\"container\">\n            <Learn/>\n        </div>\n      </Pane>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}